
<%= form_with(model: @user, multipart: true) do |f| %>
  <div id="signUp" class="SignUp">
    <div class="Images" id="header">
      <div class="LeftHeader" id="leftHeader">
        <%= image_tag "insert.png", :class => "LeftHeaderImage", :id => "leftHeaderImage" %>
      </div>
      <div class="Badge" id="badge1">
        Banner Color
        <input hidden type="text" name="user[badgeColor]" id="user_badgeColor" value="rgb(234,167,102)">
        <input hidden type="text" name="user[badgeTextColor]" id="user_badgeTextColor" value="rgb(0,0,0)">
      </div>
      <script src="https://unpkg.com/vanilla-picker@2"></script>
      <script>
          var rgbColor1 = "rgb(234,167,102)";
          var rgbColor2 = "rgb(0,0,0)";
          $(function () {
              var badge1 = document.querySelector('#badge1');
              var badge2 = document.querySelector('#badge2');
              var badgePicker1 = new Picker({
                  parent: badge1,
                  color: "#eaa766",
                  popup: 'bottom',
                  onOpen: function () {
                      $('.popup.popup_right').css('left', "75%");
                  },
                  onChange: function (color) {
                      badge1.style.background = color.rgbaString;
                      badge2.style.background = color.rgbaString;

                      rgbColor1 = color.rgbaString;
                      rgbColor1 = rgbColor1.replace('a', '');
                      rgbColor1 = rgbColor1.substring(0, rgbColor1.length - 3) + ')';
                      $('#avatar').css('border-color', rgbColor1);
                      $("#user_badgeColor").val(rgbColor1);
                  }
              });
              var badge2 = document.querySelector('#badge2');
              var badgePicker2 = new Picker({
                  popup: 'bottom',
                  parent: badge2,
                  color: "black"
              });
              badgePicker2.onChange = function (color) {
                  badge1.style.color = color.rgbaString;
                  badge2.style.color = color.rgbaString;
                  rgbColor2 = color.rgbaString;
                  rgbColor2 = rgbColor2.replace('a', '');
                  rgbColor2 = rgbColor2.substring(0, rgbColor2.length - 3) + ')';
                  $('#user_badgeTextColor').val(rgbColor2);
              };
          });
      </script>
      <div class="Avatar" id="avatar">
        <img src="/default-avatar.jpg" style="width:100%; height:100%; object-fit:cover;" id="avatarImage">
      </div>
      <div class="RightHeader" id="rightHeader">
        <%= image_tag "insert.png", :class => "RightHeaderImage", :id => "rightHeaderImage" %>
      </div>
      <div class="Badge" id="badge2">
        Banner Text Color
      </div>
    </div>
    <div class="row justify-content-center">
      <div class="col-3" style="max-width: 320px; margin-right: 15px;">
        <div class="Form" style="margin-bottom: 100px;">
          <label class="Label">
            Name
          </label><br>
          <input type="text" class="Input" name="user[name]" id="user_name" placeholder="name" style="border-radius: 3px;">
          <br>
          <label class="Label">
            Username
          </label><br>
          <input type="text" class="Input" name="user[username]" id="user_username" placeholder="username">
          <br>
          <label class="Label">
            Email
          </label><br>
          <input type="text" id="user_email" name="user[email]" class="Input" placeholder="email">
          <br>
          <label class="Label">
            Password
          </label><br>
          <input type="password" id='user_password' name="user[password]" class="Input" placeholder="password">
          <br>
          <label class="Label">
            Confirm Password
          </label><br>
          <input type="password" name="user[password_confirmation]" id='user_password_confirmation' class="Input">
          <br>
          <label class="Label">
            Birthday
          </label><br>
          <input type="date" class="Input" name="user[birthday]" id="user_birthday">
          <br>
          <label class="Label">
            Gender
          </label><br>
          <select class="Input" name="user[gender]" id="user_gender">
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="TransMale">Transgender Male</option>
            <option value="TransFemale">Transgender Female</option>
          </select>
          <br>
          <label class="Label">
            Hometown
          </label><br>
          <input class="Input" id="user_hometown" name="user[hometown]" placeholder="Enter your Howntown" type="text"/>
          <br>
          <label class="Label">
            Reside In
          </label><br>
          <input class="Input" id="user_location" name="user[location]" placeholder="Enter your city" type="text">
          <input hidden id="user_longitude" name="user[longitude]">
          <input hidden id="user_latitude" name="user[latitude]">

        </div>
      </div>
      <div class="col-4" style="margin-left: 15px;">
        <div class="row">
          <div class="col NonMemberBenefits">
            <p>Free Account Benefits</p>
            <p> Earn ad-free days.</p>
            <p> Upload Music.</p>
            <p> listen to Broadcasts.</p>
          </div>
        </div>
        <div class="row">
          <div class="col TermsOfAgreement">
            <em>Please Read the Terms of Agreements.</em>
            <br>
            <input type="checkbox" id="user_Terms_of_Agreement" value="1"> I have read and do agree to the Terms of
            Agreements.
          </div>
        </div>
        <div class="row">
          <div class="col">
            <input type="submit" name="commit" id="submit" class="Submit" value="Create Account" data-disable-with="Create"/>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>
<input hidden class="photo_upload" type="file" name="user[firstHeader]" id="firstHeader" onchange=
    "document.getElementById('leftHeaderImage').src = window.URL.createObjectURL(this.files[0]);
        oneTimeImageSelection('firstHeader');
        $('#leftHeaderImage').height = $('.Images').height;">
<input hidden class="photo_upload" type="file" name="user[secondHeader]" id="secondHeader" onchange=
    "document.getElementById('rightHeaderImage').src = window.URL.createObjectURL(this.files[0]);
        oneTimeImageSelection('secondHeader');
        $('#rightHeaderImage').height = $('.Images').height;">
<input hidden class="photo_upload" type="file" name="user[avatar]" id="avatarUpload" onchange=
    "document.getElementById('avatarImage').src = window.URL.createObjectURL(this.files[0]);
        oneTimeImageSelection('avatarUpload');
        $('#avatarImage').height = $('.images').height * .33;">
<input style="visibility: hidden" type="text" id="user_bio" name="user[bio]" value="nullnull">
<input style="visibility: hidden" type="text" id="user_longitude" name="user[longitude]">
<input style="visibility: hidden" type="text" id="user_latitude" name="user[latitude]">


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyABBVE90zE3SB_kb52KWFSS2Fqumy303do&libraries=places"></script>
<style>
  .iw_table_row {
    height: 18px;
  }

  .iw_attribute_name {
    font-weight: bold;
    text-align: right;
  }

  .iw_table_icon {
    text-align: right;
  }
</style>
<script>

    function geocode() {
        var location = $('#user_location').val();
        $.ajax({
            url: 'https://maps.googleapis.com/maps/api/geocode/json',
            type: 'GET',
            data: {
                address: location,
                key: "AIzaSyABBVE90zE3SB_kb52KWFSS2Fqumy303do"
            },
            dataType: 'json',
            success: function (r) {
                console.log('success', r.results[0].geometry.location.lat);
                console.log('success', r.results[0].geometry.location.lng);
                $('#user_longitude').val(r.results[0].geometry.location.lng);
                $('#user_latitude').val(r.results[0].geometry.location.lat);
                //document.getElementById('user_longitude').attributes.value = r.results[0].geometry.location.lng.toString();
                //document.getElementById('user_latitude').attributes.value = r.results[0].geometry.location.lat.toString();

            },
            error: function (e) {
                console.log('error', e);
            }
        });
    }

    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });

    function isValidDate(dateString) {
        // First check for the pattern
        if (!/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(dateString))
            return false;

        // Parse the date parts to integers
        var parts = dateString.split("/");
        var day = parseInt(parts[1], 10);
        var month = parseInt(parts[0], 10);
        var year = parseInt(parts[2], 10);
        // Check the ranges of month and year
        if (year < 1000 || year > 3000 || month == 0 || month > 12)
            return false;

        var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

        // Adjust for leap years
        if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))
            monthLength[1] = 29;

        // Check the range of the day
        return day > 0 && day <= monthLength[month - 1];
    }

    var autocomplete;
    var autocomplete2;
    var country = 'all';
    var countryRestrict = {'country': 'us'};
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {!HTMLInputElement} */ (
            document.getElementById('user_hometown')), {
            types: ['(cities)'],
            componentRestrictions: countryRestrict
        });
    autocomplete2 = new google.maps.places.Autocomplete(
        /** @type {!HTMLInputElement} */ (
            document.getElementById('user_location')), {
            types: ['(cities)'],
            componentRestrictions: countryRestrict
        });
    if (country == 'all') {
        autocomplete.setComponentRestrictions({'country': []});
        autocomplete2.setComponentRestrictions({'country': []});

    }
    infoWindow = new google.maps.InfoWindow({
        content: document.getElementById('info-content')
    });

    function search() {
        var search = {
            types: ['lodging']
        };
        places.nearbySearch(search, function (results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                clearResults();
                clearMarkers();
                // Create a marker for each hotel found, and
                // assign a letter of the alphabetic to each marker icon.
                for (var i = 0; i < results.length; i++) {
                    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));
                    var markerIcon = MARKER_PATH + markerLetter + '.png';
                    // Use marker animation to drop the icons incrementally on the map.
                    markers[i] = new google.maps.Marker({
                        position: results[i].geometry.location,
                        animation: google.maps.Animation.DROP,
                        icon: markerIcon
                    });
                    // If the user clicks a hotel marker, show the details of that hotel
                    // in an info window.
                    markers[i].placeResult = results[i];
                    google.maps.event.addListener(markers[i], 'click', showInfoWindow);
                    setTimeout(dropMarker(i), i * 100);
                    addResult(results[i], i);
                }
            }
        });
    }

    function showInfoWindow() {
        var marker = this;
        places.getDetails({placeId: marker.placeResult.place_id},
            function (place, status) {
                if (status !== google.maps.places.PlacesServiceStatus.OK) {
                    return;
                }
                infoWindow.open(map, marker);
                buildIWContent(place);
            });
    }

    // Load the place information into the HTML elements used by the info window.
    function buildIWContent(place) {
        document.getElementById('iw-icon').innerHTML = '<img class="hotelIcon" ' +
            'src="' + place.icon + '"/>';
        document.getElementById('iw-url').innerHTML = '<b><a href="' + place.url +
            '">' + place.name + '</a></b>';
        document.getElementById('iw-address').textContent = place.vicinity;
        if (place.formatted_phone_number) {
            document.getElementById('iw-phone-row').style.display = '';
            document.getElementById('iw-phone').textContent =
                place.formatted_phone_number;
        } else {
            document.getElementById('iw-phone-row').style.display = 'none';
        }
        // Assign a five-star rating to the hotel, using a black star ('&#10029;')
        // to indicate the rating the hotel has earned, and a white star ('&#10025;')
        // for the rating points not achieved.
        if (place.rating) {
            var ratingHtml = '';
            for (var i = 0; i < 5; i++) {
                if (place.rating < (i + 0.5)) {
                    ratingHtml += '&#10025;';
                } else {
                    ratingHtml += '&#10029;';
                }
                document.getElementById('iw-rating-row').style.display = '';
                document.getElementById('iw-rating').innerHTML = ratingHtml;
            }
        } else {
            document.getElementById('iw-rating-row').style.display = 'none';
        }
        // The regexp isolates the first part of the URL (domain plus subdomain)
        // to give a short URL for displaying in the info window.
        if (place.website) {
            var fullUrl = place.website;
            var website = hostnameRegexp.exec(place.website);
            if (website === null) {
                website = 'http://' + place.website + '/';
                fullUrl = website;
            }
            document.getElementById('iw-website-row').style.display = '';
            document.getElementById('iw-website').textContent = website;
        } else {
            document.getElementById('iw-website-row').style.display = 'none';
        }
    }
</script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
    function oneTimeImageSelection(imageDiv) {
        console.log("imageDiv ", imageDiv);
        document.getElementById(imageDiv).disabled = true;
    }

    function validateEmail(email) {
        var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    }

    function validate(email) {
        if (validateEmail(email)) {
            console.log("valid");
        } else {
            console.log("non");
        }
    }

    var imagesProperties = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];

    $(function () {
        var $username = $('#user_name');
        var $userusername = $('#user_username');
        var $useremail = $('#user_email');
        var $userPassword = $('#user_password');
        var $userPasswordConfirm = $('#user_password_confirmation');
        $username.bind('keyup', 'keydown', function (e) {
            if ($username.val().length > 30 || $username.val().length < 4) {
                console.log('Invalid Name');
                $username.css('background-color', '#FF5353');
            } else {
                $username.css('background-color', 'white');
            }
            readyToSubmit();
        });
        $userusername.bind('keyup', 'keydown', function (e) {
            if ($userusername.val().length > 30 || $userusername.val().length < 4) {
                console.log('Invalid UserName');
                $userusername.css('background-color', '#FF5353');
            } else {
                $userusername.css('background-color', 'white');
            }
            readyToSubmit();
        });
        $useremail.bind('keyup', 'keydown', function (e) {
            if (validateEmail($useremail.val())) {
                $useremail.css('background-color', 'white');
            } else {
                console.log('Invalid email');
                $useremail.css('background-color', '#FF5353');
            }
            readyToSubmit();
        });
        $userPassword.bind('keyup', 'keydown', function (e) {
            if ($userPassword.val().length > 30 || $userPassword.val().length < 4) {
                console.log('Invalid Password');
                $userPassword.css('background-color', '#FF5353');
                $userPasswordConfirm.css('background-color', '#FF5353');
            } else {
                if ($userPassword.val() != $userPasswordConfirm.val()) {
                    console.log('passwords are not the same');
                    $userPassword.css('background-color', '#FF5353');
                    $userPasswordConfirm.css('background-color', '#FF5353');
                } else {
                    $userPassword.css('background-color', 'white');
                    $userPasswordConfirm.css('background-color', 'white');
                }
            }
            readyToSubmit();
        });
        $userPasswordConfirm.bind('keyup', 'keydown', function (e) {
            if ($userPassword.val() != $userPasswordConfirm.val()) {
                console.log('passwords are not the same');
                $userPassword.css('background-color', '#FF5353');
                $userPasswordConfirm.css('background-color', '#FF5353');
            } else {
                $userPasswordConfirm.css('background-color', 'white');
                $userPassword.css('background-color', 'white');
            }
            readyToSubmit();
        });
        $('#user_hometown').change(function () {
            console.log('select home');
            readyToSubmit();
        });
        $('#user_Terms_of_Agreement').click(function () {
            console.log("clicked");
            readyToSubmit();
        });

        //   $("#user_birthday").datepicker({
        //     defaultDate: +7
        //});
        document.getElementById("user_birthday").defaultValue = "2010-01-01";
        //  $('#user_birthday').on('click', function () {
        //    $('#ui-datepicker-div').css('z-index', '100');
        //});
        $(".Avatar").on("click", function () {
            $("#avatarUpload").trigger("click");
        });
        $(".LeftHeader").on("click", function () {
            $("#firstHeader").trigger("click");
        });
        $(".RightHeader").on("click", function () {
            $("#secondHeader").trigger("click");
        });
        var widthOfOneHeader = document.getElementById('leftHeader').offsetWidth;
        var widthOfAvatar = document.getElementById('avatar');
        var heightOfImages = (widthOfOneHeader / 4.47666667) * 2;
        $('#header').css("height", heightOfImages);
        $('.LeftHeader').css("height", heightOfImages - 6);
        $('.RightHeader').css("height", heightOfImages - 6);
        if (widthOfOneHeader * 2 > 700) {
            $('#header').css("height", heightOfImages);
            $('.LeftHeader').css("height", heightOfImages - 6);
            $('.RightHeader').css("height", heightOfImages - 6);
            $('.Avatar').css("height", heightOfImages * 0.55);
            $('.Avatar').css("width", heightOfImages * 0.55);
            $('.Avatar').css("left", widthOfOneHeader - widthOfAvatar.offsetWidth / 2);
            $('.Avatar').css('top', (heightOfImages * 0.15));
            $("#badge1").css('top', (heightOfImages * 0.2));
            $('#badge1').css('width', widthOfOneHeader * 0.5);
            $("#badge1").css('left', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
            $("#badge2").css('top', (heightOfImages * 0.2));
            $('#badge2').css('width', widthOfOneHeader * 0.5);
            $("#badge2").css('right', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
        } else if (widthOfOneHeader > 267) {
            $('#header').css("height", heightOfImages);
            $('.LeftHeader').css("height", heightOfImages - 6);
            $('.RightHeader').css("height", heightOfImages - 6);
            $('.Avatar').css("height", heightOfImages * 0.5);
            $('.Avatar').css("width", heightOfImages * 0.5);
            $('.Avatar').css("left", widthOfOneHeader - widthOfAvatar.offsetWidth / 2);
            $('.Avatar').css('top', (heightOfImages * 0.15));
            $("#badge1").css('top', (heightOfImages * 0.2));
            $('#badge1').css('width', widthOfOneHeader * 0.5);
            $("#badge1").css('left', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
            $("#badge2").css('top', (heightOfImages * 0.2));
            $('#badge2').css('width', widthOfOneHeader * 0.5);
            $("#badge2").css('right', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
        } else {
            $('.Avatar').css("height", heightOfImages * 0.6);
            $('.Avatar').css("width", heightOfImages * 0.6);
            $('.Avatar').css("left", widthOfOneHeader - widthOfAvatar.offsetWidth / 2);
            $('.Avatar').css('top', (heightOfImages * 0.15));
            $("#badge1").css('top', (heightOfImages * 0.2));
            $('#badge1').css('width', widthOfOneHeader * 0.5);
            $("#badge1").css('left', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
            $("#badge2").css('top', (heightOfImages * 0.2));
            $('#badge2').css('width', widthOfOneHeader * 0.5);
            $("#badge2").css('right', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
        }
        $(window).resize(function () {
            widthOfOneHeader = document.getElementById('leftHeader').offsetWidth;
            widthOfAvatar = document.getElementById('avatar');
            heightOfImages = (widthOfOneHeader / 4.47666667) * 2;
            $('#header').css("height", heightOfImages);
            $('.LeftHeader').css("height", heightOfImages);
            $('.RightHeader').css("height", heightOfImages);
            if (widthOfOneHeader * 2 > 700) {
                $('#header').css("height", heightOfImages);
                $('.LeftHeader').css("height", heightOfImages - 6);
                $('.RightHeader').css("height", heightOfImages - 6);
                $('.Avatar').css("height", heightOfImages * 0.55);
                $('.Avatar').css("width", heightOfImages * 0.55);
                $('.Avatar').css("left", widthOfOneHeader - widthOfAvatar.offsetWidth / 2);
                $('.Avatar').css('top', heightOfImages * 0.2);
                $("#badge1").css('top', (heightOfImages * 0.2));
                $('#badge1').css('width', widthOfOneHeader * 0.5);
                $("#badge1").css('left', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
                $("#badge2").css('top', (heightOfImages * 0.2));
                $('#badge2').css('width', widthOfOneHeader * 0.5);
                $("#badge2").css('right', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
            } else if (widthOfOneHeader > 267) {
                $('#header').css("height", heightOfImages);
                $('.LeftHeader').css("height", heightOfImages - 6);
                $('.RightHeader').css("height", heightOfImages - 6);
                $('.Avatar').css("height", heightOfImages * 0.5);
                $('.Avatar').css("width", heightOfImages * 0.5);
                $('.Avatar').css("left", widthOfOneHeader - widthOfAvatar.offsetWidth / 2);
                $('.Avatar').css('top', (heightOfImages * 0.15));
                $("#badge1").css('top', (heightOfImages * 0.2));
                $('#badge1').css('width', widthOfOneHeader * 0.5);
                $("#badge1").css('left', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
                $("#badge2").css('top', (heightOfImages * 0.2));
                $('#badge2').css('width', widthOfOneHeader * 0.5);
                $("#badge2").css('right', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
            } else {
                $('.Avatar').css("height", heightOfImages * 0.6);
                $('.Avatar').css("width", heightOfImages * 0.6);
                $('.Avatar').css("left", widthOfOneHeader - widthOfAvatar.offsetWidth / 2);
                $('.Avatar').css('top', (heightOfImages * 0.15));
                $("#badge1").css('top', (heightOfImages * 0.2));
                $('#badge1').css('width', widthOfOneHeader * 0.5);
                $("#badge1").css('left', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
                $("#badge2").css('top', (heightOfImages * 0.2));
                $('#badge2').css('width', widthOfOneHeader * 0.5);
                $("#badge2").css('right', (widthOfOneHeader / 2) - (widthOfOneHeader * 0.5) / 2);
            }
        });
        $("#firstHeader").change(function () {
            var info;
            var firstHeaderPic = document.getElementById("leftHeaderImage");
            var firstHeaderCrop = new Croppie(firstHeaderPic, {
                viewport: {
                    width: $('#main').width / 2,
                    height: $('.Images').height,
                    type: 'square'
                },
                boundary: {
                    width: $('#main').width / 2,
                    height: $('.Images').height,
                    type: 'square'
                },
                showZoomer: false,
                update: function (data) {
                    for (var i = 0; i < 4; i++) {
                        imagesProperties[i] = data.points[i];
                    }
                    imagesProperties[4] = String(data.zoom);
                    console.log(imagesProperties);
                }
            });
        });
        $("#secondHeader").change(function () {
            var secondHeaderPic = document.getElementById("rightHeaderImage");
            var secondHeaderCrop = new Croppie(secondHeaderPic, {
                viewport: {
                    width: $('#main').width / 2,
                    height: $('.Images').height,
                    type: 'square'
                },
                boundary: {
                    width: $('#main').width / 2,
                    height: $('.Images').height
                },
                showZoomer: false,
                update: function (data) {
                    for (var i = 5; i < 9; i++) {
                        imagesProperties[i] = data.points[i - 5];
                    }
                    imagesProperties[9] = String(data.zoom);
                    console.log(imagesProperties);
                }
            });
        });
        $("#avatarUpload").change(function () {
            var avatarPic = document.getElementById("avatarImage");
            var avatarCrop = new Croppie(avatarPic, {
                viewport: {
                    width: $('#avatar').width,
                    height: $('#avatar').height,
                    type: 'circle'
                },
                boundary: {
                    width: $('#avatar').width,
                    height: $('#avatar').height,

                },

                showZoomer: false,
                update: function (data) {
                    for (var i = 10; i < 14; i++) {
                        imagesProperties[i] = data.points[i - 10];
                    }
                    imagesProperties[14] = String(data.zoom);
                }
            });
            $('#avatar .cr-boundary').css('border-radius', '50%');
        });
    });

    function readyToSubmit() {
        if ($('#user_name').css('background-color') != 'rgb(255, 83, 83)' && $('#user_name').val().length > 3) {
            console.log("name");
            if ($('#user_username').css('background-color') != 'rgb(255, 83, 83)' && $('#user_username').val().length > 3) {
                console.log("username");
                if ($('#user_email').css('background-color') != 'rgb(255, 83, 83)' && $('#user_email').val().length > 3) {
                    console.log("email");
                    if ($('#user_password').css('background-color') != 'rgb(255, 83, 83)' && $('#user_password').val().length > 3) {
                        console.log("passwor");
                        if ($('#user_password_confirmation').css('background-color') != 'rgb(255, 83, 83)' && $('#user_password_confirmation').val().length > 3) {
                            console.log("con password");
                            if ($('#user_birthday').css('background-color') != 'rgb(255, 83, 83)') {
                                console.log("birth");
                                if ($('#user_hometown').css('background-color') != 'rgb(255, 83, 83)' && $('#user_hometown').val().length > 3) {
                                    console.log("home");
                                    if ($('#user_location').css('background-color') != 'rgb(255, 83, 83)' && $('#user_location').val().length > 3) {
                                        console.log("lcoa");
                                        if (document.getElementById("user_Terms_of_Agreement").checked) {
                                            $('#submit').css('display', 'block');
                                            //var a = document.querySelector('#user_imagesproperties');
                                            //a.attributes.value = imagesProperties.toString();
                                            console.log(imagesProperties.toString());
                                            $('#user_bio').val(imagesProperties.toString());
                                            geocode();
                                            $("#user_badgeColor").val(rgbColor1);
                                            $("#user_badgeTextColor").val(rgbColor2);
                                            console.log("user_imagesproperties " + $('#user_imagesproperties').val());
                                            //console.log("user_imagesproperties2 " + a.attributes.value);
                                            console.log("user_badgeColor" + $("#user_badgeColor").val());
                                            console.log("user_badgeTextColor" + $("#user_badgeTextColor").val());
                                            console.log("user_location " + $("#user_location").val());
                                            console.log("user_hometown " + $("#user_hometown").val());
                                            return;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        $('#submit').css('display', 'none');
    }
</script>